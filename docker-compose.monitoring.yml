version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: openscenario-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alert.rules:/etc/prometheus/alert.rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - openscenario-network
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: openscenario-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - openscenario-network
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: openscenario-promtail
    volumes:
      - ./monitoring/promtail/promtail.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - openscenario-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: openscenario-grafana
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus
      - loki
      - tempo
    networks:
      - openscenario-network
    restart: unless-stopped

  tempo:
    image: grafana/tempo:latest
    container_name: openscenario-tempo
    ports:
      - "3200:3200"
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    volumes:
      - ./monitoring/tempo/tempo.yml:/etc/tempo/tempo.yml
      - tempo_data:/var/tempo
    command:
      - -config.file=/etc/tempo/tempo.yml
    networks:
      - openscenario-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: openscenario-node-exporter
    ports:
      - "9101:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - openscenario-network
    restart: unless-stopped

volumes:
  prometheus_data:
  loki_data:
  grafana_data:
  tempo_data:

networks:
  openscenario-network:
    external: true